{"version":3,"sources":["../node_modules/codemirror/addon/search/searchcursor.js","../node_modules/codemirror/addon/edit/matchbrackets.js","../node_modules/codemirror/keymap/sublime.js"],"names":["CodeMirror","doFold","noFold","Pos","regexpFlags","regexp","flags","ignoreCase","global","multiline","ensureFlags","current","target","i","length","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","head","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","setSelections","mod","require","ie_lt8","navigator","userAgent","document","documentMode","matching","bracketRegex","config","findMatchingBracket","cm","where","getLineHandle","afterCursor","getWrapperElement","className","re","text","dir","strict","style","getTokenTypeAt","scanForBracket","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","lineNo","undefined","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","highlightNonMatching","marks","listSelections","empty","markText","focused","focus","clear","operation","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","oldConfig","cmds","commands","findPosSubword","type","startPos","e","next","cat","isWordChar","toUpperCase","moveSubword","extendSelectionsBy","range","display","shift","extend","insertLine","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","wordAt","word","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","isSelectedRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","getRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","closing","puncType","sortLines","caseSensitive","direction","selected","toSort","sort","a","b","au","bu","modifyWordOrSelection","indices","replacements","replaceSelections","getTarget","findAndGoTo","selectScope","goToBracket","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","k","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime"],"mappings":"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","file":"static/js/3.3b2e9153.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"sourceRoot":""}